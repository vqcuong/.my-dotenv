#!/bin/zsh

function _setup_zi() {
	if [[ ! -f $1/bin/zi.zsh ]]; then
		print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
		command mkdir -p $1 && command chmod go-rwX $1
		command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi $1/bin && \
			print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
			print -P "%F{160}▓▒░ The clone has failed.%f%b"
	fi
	source $1/bin/zi.zsh
	autoload -Uz _zi
	(( ${+_comps} )) && _comps[zi]=_zi
	zicompinit
}
_setup_zi ${ZDOTDIR:-$HOME}/.zi

function _setup_powerlevel10k() {
  () { [[ -r $1 ]] && source $1 } "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" 
  [[ -d $1 ]] || git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $1
  source $1/powerlevel10k.zsh-theme
}
_setup_powerlevel10k "${ZDOTDIR:-$HOME}/.powerlevel10k" 

export PATH="$HOME/.local/bin:/usr/local/bin:$PATH"
export XDG_CONFIG_HOME="$HOME/.config"
export ZLE_RPROMPT_INDENT=0

zi snippet OMZP::aws
zi snippet OMZP::copybuffer
# zi snippet OMZP::docker
zi snippet OMZP::docker-compose
zi snippet OMZP::git
zi snippet OMZP::history
zi snippet OMZP::kubectl
zi snippet OMZP::python
zi snippet OMZP::sudo
zi snippet OMZP::terraform

zi light vqcuong/auto-ls
zi light vqcuong/exa-zsh-completion

zi light wfxr/forgit
zi light Aloxaf/fzf-tab
zi light zdharma-continuum/fast-syntax-highlighting
zi light zsh-users/zsh-autosuggestions
zi light marlonrichert/zsh-autocomplete

export FORGIT_NO_ALIASES=true
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
export ZSH_AUTOSUGGEST_MANUAL_REBIND=true
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
unset ZSH_AUTOSUGGEST_USE_ASYNC
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' continuous-trigger '/'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls -1 --color=always $realpath'
zstyle ':fzf-tab:autocomplete:*complete*:*' insert-unambiguous yes
zstyle ':autocomplete:*history*:*' insert-unambiguous yes
zstyle ':autocomplete:menu-search:*' insert-unambiguous yes
() {
  local -a prefix=( '\e'{\[,O} )
  local -a up=( ${^prefix}A ) down=( ${^prefix}B )
  local key=
  for key in $up[@]; do
    bindkey "$key" .autosuggest-orig-1-up-line-or-search 
  done
  for key in $down[@]; do
    bindkey "$key" down-history
  done
}

# User configuration
eval $(/opt/homebrew/bin/brew shellenv)
eval $(thefuck --alias)
if [ -f ${ZDOTDIR:-$HOME}/.aliases ]; then
    source ${ZDOTDIR:-$HOME}/.aliases
fi
source <(k3d completion zsh)

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/cuongok/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/cuongok/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/Users/cuongok/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/cuongok/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# enable fzf
[ -f ${ZDOTDIR:-$HOME}/.fzf.zsh ] && source ${ZDOTDIR:-$HOME}/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='k|kubectl|helm|kubens|kubectx|oc|istioctl|kogito|k9s|helmfile|flux|fluxctl|stern|kubeseal|skaffold|kubent|kubecolor|cmctl|sparkctl'
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh
